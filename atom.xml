<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>http://www.tomaz.me</title>
	<subtitle>computers, programming, ponies and snakes.</subtitle>
	<link href="http://www.tomaz.me" rel="self" />
	<link href="http://www.tomaz.me" />
	<id>http://www.tomaz.me</id>
	<updated>2013-06-19T08:18:25-07:00</updated>
	<author>
		<name>Tomaz Muraus</name>
		<email>tomaz@tomaz.me</email>
	</author>

    
	<entry>
		<title>Visualizing Cassandra nodetool cfhistograms output using a histogram</title>
        <link href="http://www.tomaz.me/2013/06/18/visualizing-cassandra-nodetool-cfhistograms-output-using-a-histogram.html" />
        <id>http://www.tomaz.me/2013/06/18/visualizing-cassandra-nodetool-cfhistograms-output-using-a-histogram.html</id>
		<updated>2013-06-18T00:00:00-07:00</updated>
		<content type="html">&lt;h2 id='visualizing_cassandra_nodetool_cfhistograms_output_using_a_histogram'&gt;&lt;a href='/2013/06/18/visualizing-cassandra-nodetool-cfhistograms-output-using-a-histogram.html'&gt;Visualizing Cassandra nodetool cfhistograms output using a histogram&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;&lt;a href='https://cassandra.apache.org/'&gt;Apache Cassandra&lt;/a&gt; includes a lot of functionality and tools which provide good visibility into your cluster health and performance.&lt;/p&gt;

&lt;p&gt;A lot of this performance and health related metrics are exposed over the &lt;a href='https://wiki.apache.org/cassandra/JmxInterface'&gt;JMX interface&lt;/a&gt; and through the &lt;a href='https://wiki.apache.org/cassandra/NodeTool'&gt;nodetool&lt;/a&gt; command line tool. nodetool is a simple wrapper around JMX interface which allows you to access some of the most commonly used attributes through a simple command line interface.&lt;/p&gt;

&lt;p&gt;Another feature which was added recently and is available in Cassandra 1.2 is a feature called &lt;a href='http://www.datastax.com/dev/blog/tracing-in-cassandra-1-2'&gt;request tracing&lt;/a&gt;. Request tracing allows you see exactly what happens during a query executing and exactly how long each step takes.&lt;/p&gt;
&lt;div class='imginline'&gt;&lt;a class='fancybox' href='/images/2013-06-18-visualizing-cassandra-nodetool-cfhistograms-output-using-a-histogram/request_tracing.png' title='Example of the request tracing session output. Source:
http://www.datastax.com/dev/blog/tracing-in-cassandra-1-2'&gt;&lt;img class='inline' src='/images/2013-06-18-visualizing-cassandra-nodetool-cfhistograms-output-using-a-histogram/request_tracing_thumb.png' /&gt;&lt;/a&gt;&lt;span class='image-caption'&gt;Example of the request tracing session output.&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;This data is very granular and includes everything from how much time it takes to parse the CQL query to how much time it takes to talk to other nodes in the cluster and read data from memory and / or disk.&lt;/p&gt;

&lt;p&gt;This functionality is very powerful, but it&amp;#8217;s only available in Cassandra 1.2.&lt;/p&gt;

&lt;p&gt;Some of the Cassandra clusters we operate here at Rackspace, more specifically on the &lt;a href='http://www.rackspace.com/cloud/monitoring/'&gt;Cloud Monitoring team&lt;/a&gt;, don&amp;#8217;t run Cassandra 1.2 yet. Because of that, I&amp;#8217;m going to focus on another very useful feature which is available in the older versions of Cassandra today.&lt;/p&gt;

&lt;p&gt;This feature is &lt;code&gt;cfhistograms&lt;/code&gt; command exposed by the &lt;code&gt;nodetool&lt;/code&gt; utility.&lt;/p&gt;

&lt;h3 id='cfhistograms_nodetool_command'&gt;cfhistograms nodetool command&lt;/h3&gt;

&lt;p&gt;&lt;a href='http://www.datastax.com/docs/1.2/references/nodetool#nodetool-cfhistograms'&gt;cfhistograms&lt;/a&gt; command prints statistic &lt;a href='https://en.wikipedia.org/wiki/Histogram'&gt;histograms&lt;/a&gt; for a particular column family. The output includes the following information:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Distribution of the write latency&lt;/li&gt;

&lt;li&gt;Distribution of the read latency&lt;/li&gt;

&lt;li&gt;Distribution of number of &lt;a href='https://wiki.apache.org/cassandra/ArchitectureSSTable'&gt;sstables&lt;/a&gt; accessed during a read&lt;/li&gt;

&lt;li&gt;Distribution of the row size&lt;/li&gt;

&lt;li&gt;Distribution of number of columns in a row&lt;/li&gt;
&lt;/ul&gt;
&lt;div class='imginline'&gt;&lt;a class='fancybox' href='/images/2013-06-18-visualizing-cassandra-nodetool-cfhistograms-output-using-a-histogram/cf_histograms_output.png' title='nodetool cfhistograms command output. Useful but hard to interpret.'&gt;&lt;img class='inline' src='/images/2013-06-18-visualizing-cassandra-nodetool-cfhistograms-output-using-a-histogram/cf_histograms_output_thumb.png' /&gt;&lt;/a&gt;&lt;span class='image-caption'&gt;nodetool cfhistograms command output. Useful but hard to interpret.&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;This information is very useful, but the problem is that the default output is very convoluted and hard to read. If you Google around, you can find some good posts which explain how to interpret this output (e.g. &lt;a href='http://narendrasharma.blogspot.com/2011/04/cassandra-07x-understanding-output-of.html'&gt;Cassandra 0.7.x - Understanding the output of nodetool cfhistograms&lt;/a&gt;), but nevertheless interpreting the raw command line output is still time consuming and cumbersome.&lt;/p&gt;

&lt;h3 id='visualizing_cfhistograms_output'&gt;Visualizing cfhistograms output&lt;/h3&gt;

&lt;p&gt;Around a year ago I was debugging a performance issues in one of our clusters so I decided to write simple Python script which visualizes the &lt;code&gt;cfhistograms&lt;/code&gt; output using a histogram.&lt;/p&gt;

&lt;p&gt;This script is nothing fancy, but it does it&amp;#8217;s job. In the background it uses a couple of lines of Python and &lt;a href='http://matplotlib.org/'&gt;matplotlib&lt;/a&gt; to convert the raw text output into nice looking histograms.&lt;/p&gt;
&lt;div class='imginline'&gt;&lt;a class='fancybox' href='/images/2013-06-18-visualizing-cassandra-nodetool-cfhistograms-output-using-a-histogram/sstables_histogram.png' title='Histogram generated by the script. It makes identifying the outliers just by glancing over the image a lot
easier and faster.'&gt;&lt;img class='inline' src='/images/2013-06-18-visualizing-cassandra-nodetool-cfhistograms-output-using-a-histogram/sstables_histogram_thumb.png' /&gt;&lt;/a&gt;&lt;span class='image-caption'&gt;Histogram generated by the script. It makes identifying the outliers just by glancing over the image a lot
easier and faster.&lt;/span&gt;&lt;/div&gt;
&lt;h4 id='usage'&gt;Usage&lt;/h4&gt;

&lt;p&gt;Script is available as a &lt;a href='https://gist.github.com/Kami/5810229'&gt;gist on Github&lt;/a&gt;.&lt;/p&gt;

&lt;h5 id='1_download_and_chmod_the_script'&gt;1. Download and chmod the script&lt;/h5&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='bash'&gt;wget &lt;span class='s2'&gt;&amp;quot;https://gist.github.com/Kami/5810229/raw/189ab7232bcb6db5dd5f6871533bcb5efecdfd84/cassandra_cfhistograms_to_histogram.py&amp;quot;&lt;/span&gt;
chmod +x cassandra_cfhistograms_to_histogram.py
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h5 id='2_install_the_matplotlib_dependency'&gt;2. Install the matplotlib dependency&lt;/h5&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='bash'&gt;pip install matplotlib
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h5 id='3_run_the_script'&gt;3. Run the script&lt;/h5&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='bash'&gt;./cassandra_cfstats_histogram.py --input&lt;span class='o'&gt;=&lt;/span&gt;&amp;lt;path to the file with cfhistograms output&amp;gt; &lt;span class='se'&gt;\&lt;/span&gt;
                                 --output&lt;span class='o'&gt;=&lt;/span&gt;&amp;lt;directory where the histograms will be saved&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='bash'&gt;./cassandra_cfstats_histogram.py --input&lt;span class='o'&gt;=&lt;/span&gt;/home/myuser/cfhistograms_output.txt &lt;span class='se'&gt;\&lt;/span&gt;
                                 --output&lt;span class='o'&gt;=&lt;/span&gt;/home/myuser/histograms-images/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;All this script does it reads data from the input file, processes it and writes 5 different histogram files to the output directory.&lt;/p&gt;

&lt;h3 id='conclusion'&gt;Conclusion&lt;/h3&gt;

&lt;p&gt;I hope you find it useful and this script will allow you to more easily interpret the output of nodetool &lt;code&gt;cfhistograms&lt;/code&gt; command.&lt;/p&gt;

&lt;p&gt;In the future, I will try to write more about how we used the output of this command in practice to identify and issue and misconfiguration in one of our clusters.&lt;/p&gt;</content>
	</entry>
    
	<entry>
		<title>Libcloud Design Day Recap (improving Libcloud and plans for the future)</title>
        <link href="http://www.tomaz.me/2013/06/12/libcloud-design-day-recap-improving-libcloud-and-plans-for-the-future.html" />
        <id>http://www.tomaz.me/2013/06/12/libcloud-design-day-recap-improving-libcloud-and-plans-for-the-future.html</id>
		<updated>2013-06-12T00:00:00-07:00</updated>
		<content type="html">&lt;h2 id='libcloud_design_day_recap_improving_libcloud_and_plans_for_the_future'&gt;&lt;a href='/2013/06/12/libcloud-design-day-recap-improving-libcloud-and-plans-for-the-future.html'&gt;Libcloud Design Day Recap (improving Libcloud and plans for the future)&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Yesterday we hosted &lt;a href='https://lcdesignday.eventbrite.com'&gt;Libcloud Design Day and Meetup&lt;/a&gt; at the &lt;a href='http://rackertalent.com/sanfrancisco/'&gt;Rackspace San Francisco office&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This blog post includes a short recap of main topics we covered. It&amp;#8217;s assembled mostly from my &lt;a href='https://mail-archives.apache.org/mod_mbox/libcloud-dev/201306.mbox/%3CCAJMHEmLtN9Fskqj5GTc8_Kfro08xjADvtYBSeT7i%3D-iesg%3Durg%40mail.gmail.com%3E'&gt;Libcloud mailing list post&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The goal of the event was to sit down with the &lt;a href='https://libcloud.apache.org/'&gt;Libcloud&lt;/a&gt; users and developers, indicate current biggest pain points and weaknesses and brainstorm about possible solutions.&lt;/p&gt;

&lt;p&gt;Event was relatively small, but we had a good sample set of Libcloud developers and user.&lt;/p&gt;
&lt;div class='imginline'&gt;&lt;a class='fancybox' href='/images/2013-06-12-libcloud-design-day-recap-improving-libcloud-and-plans-for-the-future/lc_design_day.jpg' title='Photo taken at the event'&gt;&lt;img class='inline' src='/images/2013-06-12-libcloud-design-day-recap-improving-libcloud-and-plans-for-the-future/lc_design_day_thumb.jpg' /&gt;&lt;/a&gt;&lt;span class='image-caption'&gt;Photo taken at the event&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;Here is an incomplete list of people who have attended the event:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href='http://journal.paul.querna.org/'&gt;Paul Querna&lt;/a&gt; (of Apache fame, also Libcloud committer)&lt;/li&gt;

&lt;li&gt;&lt;a href='https://github.com/jedsmith/'&gt;Jed Smith&lt;/a&gt; (Libcloud committer)&lt;/li&gt;

&lt;li&gt;&lt;a href='http://alexgaynor.net/'&gt;Alex Gaynor&lt;/a&gt; (PyPy, Django, Topaz, etc. contributor)&lt;/li&gt;

&lt;li&gt;&lt;a href='http://glyph.twistedmatrix.com/'&gt;Glyph Lefkowitz&lt;/a&gt; (&lt;a href='https://twistedmatrix.com/trac/'&gt;Twisted&lt;/a&gt; creator)&lt;/li&gt;

&lt;li&gt;&lt;a href='http://dreid.org/'&gt;David Reid&lt;/a&gt; (Twisted contributor)&lt;/li&gt;

&lt;li&gt;Chris from &lt;a href='https://mist.io/'&gt;mist.io&lt;/a&gt; (mist.io uses Libcloud with many different providers)&lt;/li&gt;

&lt;li&gt;Rick from Google working on the &lt;a href='https://cloud.google.com/products/compute-engine'&gt;Google Compute Engine&lt;/a&gt; driver&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You might recognize some of the names above - we were very happy to have some very well known and knowledgeable people from the Python world to join us.&lt;/p&gt;

&lt;h3 id='pricing_data_distribution'&gt;Pricing data distribution&lt;/h3&gt;

&lt;p&gt;Currently we bundle JSON file with provider pricing data with every release. There is no documented and easy way for user to update this file or for us to ship an updated version without releasing a new version of Libcloud.&lt;/p&gt;

&lt;p&gt;We should provide easy way to update this file which includes the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Command line tool for updating the file - user can specify a custom URL to the file. By default it should point to the latest version from the version control (&lt;a href='https://svn.apache.org/viewvc/libcloud/trunk/libcloud/data/pricing.json?view=co'&gt;https://svn.apache.org/viewvc/libcloud/trunk/libcloud/data/pricing.json?view=co&lt;/a&gt;)&lt;/li&gt;

&lt;li&gt;Modify the code so it also tries to find the default pricing data file in &lt;code&gt;/home/user/.libcloud_data/pricing.json&lt;/code&gt; (or whatever) directory&lt;/li&gt;

&lt;li&gt;Document this process and add it to the documentation page&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;Note: Most of code for this functionality already exists (&lt;a href='https://github.com/apache/libcloud/blob/trunk/libcloud/pricing.py'&gt;https://github.com/apache/libcloud/blob/trunk/libcloud/pricing.py&lt;/a&gt;). We just need to add a code for downloading a file from a remote server and the cli tool.&lt;/em&gt;&lt;/p&gt;

&lt;h3 id='exception_reporting_for_partial_failures_in_the_methods_which_result_in_multiple_api_calls__http_requests'&gt;Exception reporting for partial failures in the methods which result in multiple API calls / HTTP requests&lt;/h3&gt;

&lt;p&gt;Currently we have no standard interface for exceptions which get raised during a partial failure in a method which has side affects. Partial failure means that a function which performs multiple API calls failed half way through and this potentially resulted in some (but not all) resources getting created.&lt;/p&gt;

&lt;p&gt;We should provide a special exception for cases like this. This exception should contain information about resources which got created. Users can then use this information to perform &amp;#8220;rollback&amp;#8221; / cleanup partially created resources.&lt;/p&gt;

&lt;h3 id='support_for_async_api_in_the_core'&gt;Support for async API in the core&lt;/h3&gt;

&lt;p&gt;Currently we only expose sync / blocking API. This mostly works OK for simple command line scripts, but it&amp;#8217;s less than ideal for long running process or applications which performs a lot of API calls which could be made more efficient and faster if we supported an async api.&lt;/p&gt;

&lt;p&gt;As part of this change we would eventually need to refactor every driver which would also provide other side benefits such as:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Code which is more maintainable and easier to test (smaller functions)&lt;/li&gt;

&lt;li&gt;Easier way to handle partial failures / exceptions&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We didn&amp;#8217;t come to a consensus on everything, but we agreed on a couple of things:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Change should be backward compatible, we should default to the sync API and existing behavior code / shouldn&amp;#8217;t change&lt;/li&gt;

&lt;li&gt;New async API should be available separately (e.g. under &lt;code&gt;libcloud.async.*&lt;/code&gt; or whatever it ends up being)&lt;/li&gt;

&lt;li&gt;We should refactor internal code to follow new interfaces defined in the PEP 3156 (&lt;a href='http://www.python.org/dev/peps/pep-3156/'&gt;http://www.python.org/dev/peps/pep-3156/&lt;/a&gt;)&lt;/li&gt;

&lt;li&gt;We should start with a small scale experiment and try this in a single method in a compute driver&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id='documentation'&gt;Documentation&lt;/h3&gt;

&lt;p&gt;We are weak on the documentation side.&lt;/p&gt;

&lt;p&gt;Going forward we should strictly enforce that every patch which adds new code / functionality contains documentation and appropriate docstrings.&lt;/p&gt;

&lt;h3 id='migrating_to_git'&gt;Migrating to git&lt;/h3&gt;

&lt;p&gt;We want to make contributing as easy as possible. SVN doesn&amp;#8217;t help with that and increases barrier to entry.&lt;/p&gt;

&lt;p&gt;Action item here is me opening an Apache Infrastructure ticket for switching to git.&lt;/p&gt;

&lt;h3 id='dropping_support_for_python_25'&gt;Dropping support for Python 2.5&lt;/h3&gt;

&lt;p&gt;Supporting Python 2.5 adds code complexity which we would like to avoid. Main problem is that a bunch of CLI tools based on Libcloud usually also run on older versions of Linux distributions (e.g. RHEL 5) which still ship with Python 2.5.&lt;/p&gt;

&lt;p&gt;We didn&amp;#8217;t managed to actually talk about this one, but we should explore an option of removing support for Python 2.5 in the future release.&lt;/p&gt;

&lt;h3 id='conclusion'&gt;Conclusion&lt;/h3&gt;

&lt;p&gt;Overall the event was fun and productive. We had a lot of good debates and hopefully a lot of the things we talked about will result in real code and improvements in the near future :-)&lt;/p&gt;

&lt;p&gt;Thanks again to everyone who joined us. If you missed the event or you couldn&amp;#8217;t attend, don&amp;#8217;t worry! You are more than welcome (and encouraged) to join us and share your opinion and feedback on the &lt;a href='https://mail-archives.apache.org/mod_mbox/libcloud-dev/201306.mbox/%3CCAJMHEmLtN9Fskqj5GTc8_Kfro08xjADvtYBSeT7i%3D-iesg%3Durg%40mail.gmail.com%3E'&gt;mailing list&lt;/a&gt;.&lt;/p&gt;</content>
	</entry>
    
	<entry>
		<title>Time for new challenges</title>
        <link href="http://www.tomaz.me/2013/06/09/time-for-new-challenges.html" />
        <id>http://www.tomaz.me/2013/06/09/time-for-new-challenges.html</id>
		<updated>2013-06-09T00:00:00-07:00</updated>
		<content type="html">&lt;h2 id='time_for_new_challenges'&gt;&lt;a href='/2013/06/09/time-for-new-challenges.html'&gt;Time for new challenges&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;For as long as I can remember I have been interested in startups and growing a sustainable business. I have finally decided to take the next step. I&amp;#8217;m leaving Rackspace and moving back to Slovenia to start working on my own startup.&lt;/p&gt;

&lt;p&gt;In this post I will provide some background and describe my motivation for doing that.&lt;/p&gt;

&lt;h3 id='history_and_background'&gt;History and Background&lt;/h3&gt;

&lt;p&gt;The last couple of years were very exciting for me. In 2010 I joined the Y-Combinator startup &lt;a href='http://en.wikipedia.org/wiki/Cloudkick'&gt;Cloudkick&lt;/a&gt;. Later, when Cloudkick was acquired by Rackspace, I relocated to San Francisco to work for Rackspace in their new &lt;a href='http://rackertalent.com/sanfrancisco/'&gt;San Francisco office&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;During that time I had a chance to work with some of the best people in the industry, acquired a lot of new knowledge and experienced a lot of things first-hand.&lt;/p&gt;

&lt;p&gt;It&amp;#8217;s impossible to list all the things I&amp;#8217;ve learned and experienced, but just to name a few - I&amp;#8217;ve experienced the startup culture, I&amp;#8217;ve experienced the &amp;#8220;Silicon Valley bubble&amp;#8221;, I helped grow our San Francisco office from ~30 to ~80 people, I worked on &lt;a href='http://www.rackspace.com/cloud/monitoring/'&gt;Cloud Monitoring&lt;/a&gt; (successor to Cloudkick), I &lt;a href='http://www.rackspace.com/blog/keep-track-of-your-services-and-applications-with-the-new-rackspace-service-registry/'&gt;launched a product&lt;/a&gt; and I learned how things work at a relatively large company.&lt;/p&gt;
&lt;div class='imginline'&gt;&lt;a class='fancybox' href='/images/2013-06-09-time-for-new-challenges/ck_team_2010_1.jpg' title='Cloudkick team in 2010 (missing Russel Haering)'&gt;&lt;img class='inline' src='/images/2013-06-09-time-for-new-challenges/ck_team_2010_1_thumb.jpg' /&gt;&lt;/a&gt;&lt;span class='image-caption'&gt;Cloudkick team in 2010
(missing Russel Haering)&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;Besides all of that, I also met a lot of great people and made a lot of great friends with whom I hope to stay in touch for years to come.&lt;/p&gt;

&lt;p&gt;All of that helped me to become not just a better engineer but a better person overall.&lt;/p&gt;

&lt;p&gt;Now you might ask, how does all this relate to running your own startup?&lt;/p&gt;

&lt;p&gt;The answer is that I&amp;#8217;ve always paid attention to startups, long before I joined Cloudkick.&lt;/p&gt;

&lt;p&gt;I&amp;#8217;ve been reading articles, books and news about startups for as long as I had internet connection (~12 years).&lt;/p&gt;

&lt;p&gt;Because of that I always wanted to do my own startup. I&amp;#8217;ve had a countless number of side projects, websites and ran many different online communities, but nothing on which I would focus full-time I would personally call a &amp;#8220;real startup&amp;#8221;.&lt;/p&gt;

&lt;p&gt;At Cloudkick, I experienced first hand what it was like working with a small and tightly connected team, building a product which makes life easier for customers. The experience just made me want to do it even more.&lt;/p&gt;

&lt;h3 id='why_my_own_startup'&gt;Why my own startup?&lt;/h3&gt;

&lt;p&gt;I personally believe that best way to learn something new and retain the this knowledge is through first-hand experience. This doesn&amp;#8217;t mean you should just recklessly dive into something without any background or theoretical knowledge. Quite the contrary, if a literature is available, I believe that having a solid theoretical understating of a problem is one of the pre-requisites to make &amp;#8220;learn more through experience&amp;#8221; process really effective.&lt;/p&gt;

&lt;p&gt;The same thinking applies to starting my own startup. I&amp;#8217;ve already learned a lot and experience some of that at Cloudkick, but I didn&amp;#8217;t join in a really early phase and I wasn&amp;#8217;t one of the founders.&lt;/p&gt;

&lt;p&gt;This means I wasn&amp;#8217;t involved as intimately as I would want from the beginning and I missed a lot of things I still want to learn and experience.&lt;/p&gt;

&lt;p&gt;I had plenty of opportunities to join an existing early and not so early stage startup, but I believe that starting my own thing and being a founder will allow me to learn more than I otherwise could.&lt;/p&gt;
&lt;div class='imginline'&gt;&lt;img class='inline' src='/images/2013-06-09-time-for-new-challenges/raxsf.png' /&gt;&lt;span class='image-caption'&gt;Rackspace San Francisco logo by Logan
Welliver&lt;/span&gt;&lt;/div&gt;
&lt;h3 id='why_now'&gt;Why now?&lt;/h3&gt;

&lt;p&gt;I believe now is the right time for me, because there are multiple things which will probably change over the years and make it harder for me to do a startup.&lt;/p&gt;

&lt;p&gt;Most of the reasons listed bellow aren&amp;#8217;t anything special and a lot of people would simple call those things &amp;#8220;life&amp;#8221;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;I&amp;#8217;ve made a lot of friends and connections which I can ask for help and advice&lt;/li&gt;

&lt;li&gt;I&amp;#8217;m not settled down or too tied to a particular location yet&lt;/li&gt;

&lt;li&gt;I don&amp;#8217;t have a family yet&lt;/li&gt;

&lt;li&gt;I&amp;#8217;m still relatively young and don&amp;#8217;t have a lot to lose, but I have plenty to gain (learn new things)&lt;/li&gt;

&lt;li&gt;I believe I have the right co-founder. We&amp;#8217;ve known each other for a long time, we both share the same core values, but we both have different background and skills and bring different perspective to the table. I think diversity is very important and all of that makes us a great team.&lt;/li&gt;

&lt;li&gt;Most of the things I do well now I will still be able to to well couple of years in the future. In fact, I would argue that I will be able to do those things better because running my own startup will allow me to learn plenty of new things, obtain new experience and allow me to look at the problems from a different perspective. I believe that overall those things will also help make me a better person and engineer down the road.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class='imginline'&gt;&lt;img class='inline' src='/images/2013-06-09-time-for-new-challenges/zen_of_python.png' /&gt;&lt;span class='image-caption'&gt;&lt;a href='http://www.python.org/dev/peps/pep-0020/'&gt;The Zen of Python&lt;/a&gt;, emphasising &quot;Now is better than never&quot;&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;I want to add that none of the things listed above are real blockers for running a (successful) startup. Quite the contrary, I know people who fit in few of the &amp;#8220;categories&amp;#8221; described above who are still very successful at running a startup.&lt;/p&gt;

&lt;p&gt;The fact is that those people are in a minority and running a startup by itself is already a hard thing. Looking at it from a pure engineering and common sense perspective it makes sense to eliminate other things which could make it even harder and reduce number of people you could unintentionally hurt (there are plenty of stories about damaged or broken relationships).&lt;/p&gt;

&lt;h3 id='what_are_the_next_steps'&gt;What are the next steps?&lt;/h3&gt;

&lt;p&gt;When I get back to Slovenia I will first focus on building an MVP and getting it out to users as soon as possible. There will obviously also be a lot of other non-product development effort related to starting and growing a startup (legal, incorporating, marketing, &amp;#8230;) but in the end it will all boil down to to be continuous iteration of the &lt;a href='http://lean.st/principles/build-measure-learn'&gt;Build-Measure-Learn&lt;/a&gt; process.&lt;/p&gt;
&lt;div class='imginline'&gt;&lt;img class='inline' src='/images/2013-06-09-time-for-new-challenges/ls_cycle.jpeg' /&gt;&lt;span class='image-caption'&gt;Lean Startup Cycle per Lean Startup
Book&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;I will also try to do a better job with my blog. I will try to write more tech related articles and how my startup is evolving and what I have learned during this process.&lt;/p&gt;</content>
	</entry>
    
	<entry>
		<title>Hosting APT repository on Rackspace CloudFiles</title>
        <link href="http://www.tomaz.me/2012/07/22/hosting-apt-repository-on-rackspace-cloud-files.html" />
        <id>http://www.tomaz.me/2012/07/22/hosting-apt-repository-on-rackspace-cloud-files.html</id>
		<updated>2012-07-22T00:00:00-07:00</updated>
		<content type="html">&lt;h2 id='hosting_apt_repository_on_rackspace_cloudfiles'&gt;&lt;a href='/2012/07/22/hosting-apt-repository-on-rackspace-cloud-files.html'&gt;Hosting APT repository on Rackspace CloudFiles&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;In this post I will describe how to host APT repository on &lt;a href='http://www.rackspace.com/cloud/cloud_hosting_products/files/'&gt;Rackspace Cloud Files&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;First you need to create a CDN enabled container. You can do this using Libcloud or the new &lt;a href='https://mycloud.rackspace.com'&gt;Rackspace control panel&lt;/a&gt;. Depending on how frequently you are going update your APT repository it is also recommended to lower the container TTL from the default value of 3 days to 900 seconds.&lt;/p&gt;

&lt;p&gt;After you have created a CDN enabled container you need to install Python script I wrote which allows you to sychronize files from a local directory to a container hosted in one of the Storage providers &lt;a href='http://libcloud.apache.org/supported_providers.html'&gt;supported by Libcloud&lt;/a&gt;.&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='console'&gt;&lt;span class='go'&gt;  sudo pip install file-syncer&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Next we are going to create a dummy APT repository::&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='console'&gt;&lt;span class='go'&gt;mkdir -p /tmp/apt-test/conf&lt;/span&gt;
&lt;span class='go'&gt;cat &amp;gt; /tmp/apt-test/conf/distributions &amp;lt;&amp;lt;DELIM&lt;/span&gt;
&lt;span class='go'&gt;codename: precise&lt;/span&gt;
&lt;span class='go'&gt;Components: main&lt;/span&gt;
&lt;span class='go'&gt;Architectures: i386 amd64&lt;/span&gt;
&lt;span class='go'&gt;DELIM&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Add a test package using &lt;code&gt;reprepro&lt;/code&gt;:&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='console'&gt;&lt;span class='go'&gt;wget http://us.archive.ubuntu.com/ubuntu/ubuntu/ubuntu/pool/main/a/acpi/acpi_0.09-3ubuntu1_amd64.deb&lt;/span&gt;
&lt;span class='go'&gt;reprepro -b /tmp/apt-test/ includedeb precise acpi_0.09-3ubuntu1_amd64.deb&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And test the script:&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='console'&gt;&lt;span class='go'&gt;file-syncer --log-level=DEBUG --directory=/tmp/apt-test/ --username=your username --key=your api key --container-name=container name&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If everything went well, you should see an output similar to this one:&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='console'&gt;&lt;span class='go'&gt;22 Jul 2012 22:36:05 : INFO     : Using provider: CloudFiles (US)&lt;/span&gt;
&lt;span class='go'&gt;22 Jul 2012 22:36:07 : DEBUG    : Found 15 local files&lt;/span&gt;
&lt;span class='go'&gt;22 Jul 2012 22:36:08 : DEBUG    : Manifest doesn&amp;#39;t exist, assuming that there are no remote files&lt;/span&gt;
&lt;span class='go'&gt;22 Jul 2012 22:36:08 : DEBUG    : Found 0 remote files&lt;/span&gt;
&lt;span class='go'&gt;22 Jul 2012 22:36:08 : INFO     : To remove: 0, to upload: 15&lt;/span&gt;
&lt;span class='go'&gt;22 Jul 2012 22:36:08 : DEBUG    : Uploading object: db/contents.cache.db&lt;/span&gt;
&lt;span class='go'&gt;22 Jul 2012 22:36:08 : DEBUG    : Uploading object: dists/precise/main/binary-amd64/Packages&lt;/span&gt;
&lt;span class='go'&gt;22 Jul 2012 22:36:08 : DEBUG    : Uploading object: dists/precise/main/binary-i386/Release&lt;/span&gt;
&lt;span class='go'&gt;22 Jul 2012 22:36:08 : DEBUG    : Uploading object: dists/precise/main/binary-i386/Packages&lt;/span&gt;
&lt;span class='go'&gt;22 Jul 2012 22:36:08 : DEBUG    : Uploading object: db/packages.db&lt;/span&gt;
&lt;span class='go'&gt;22 Jul 2012 22:36:08 : DEBUG    : Uploading object: pool/main/a/acpi/acpi_0.09-3ubuntu1_amd64.deb&lt;/span&gt;
&lt;span class='go'&gt;22 Jul 2012 22:36:08 : DEBUG    : Uploading object: db/release.caches.db&lt;/span&gt;
&lt;span class='go'&gt;22 Jul 2012 22:36:08 : DEBUG    : Uploading object: db/version&lt;/span&gt;
&lt;span class='go'&gt;22 Jul 2012 22:36:08 : DEBUG    : Uploading object: conf/distributions&lt;/span&gt;
&lt;span class='go'&gt;22 Jul 2012 22:36:08 : DEBUG    : Uploading object: db/references.db&lt;/span&gt;
&lt;span class='go'&gt;22 Jul 2012 22:36:09 : DEBUG    : Object uploaded: dists/precise/main/binary-amd64/Packages&lt;/span&gt;
&lt;span class='go'&gt;22 Jul 2012 22:36:09 : DEBUG    : Uploading object: dists/precise/main/binary-i386/Packages.gz&lt;/span&gt;
&lt;span class='go'&gt;22 Jul 2012 22:36:09 : DEBUG    : Object uploaded: dists/precise/main/binary-i386/Packages&lt;/span&gt;
&lt;span class='go'&gt;22 Jul 2012 22:36:09 : DEBUG    : Uploading object: dists/precise/main/binary-amd64/Packages.gz&lt;/span&gt;
&lt;span class='go'&gt;22 Jul 2012 22:36:09 : DEBUG    : Object uploaded: db/release.caches.db&lt;/span&gt;
&lt;span class='go'&gt;22 Jul 2012 22:36:09 : DEBUG    : Uploading object: db/checksums.db&lt;/span&gt;
&lt;span class='go'&gt;22 Jul 2012 22:36:09 : DEBUG    : Object uploaded: dists/precise/main/binary-i386/Release&lt;/span&gt;
&lt;span class='go'&gt;22 Jul 2012 22:36:09 : DEBUG    : Uploading object: dists/precise/main/binary-amd64/Release&lt;/span&gt;
&lt;span class='go'&gt;22 Jul 2012 22:36:09 : DEBUG    : Object uploaded: conf/distributions&lt;/span&gt;
&lt;span class='go'&gt;22 Jul 2012 22:36:09 : DEBUG    : Uploading object: dists/precise/Release&lt;/span&gt;
&lt;span class='go'&gt;22 Jul 2012 22:36:09 : DEBUG    : Object uploaded: db/packages.db&lt;/span&gt;
&lt;span class='go'&gt;22 Jul 2012 22:36:09 : DEBUG    : Object uploaded: db/contents.cache.db&lt;/span&gt;
&lt;span class='go'&gt;22 Jul 2012 22:36:09 : DEBUG    : Object uploaded: db/references.db&lt;/span&gt;
&lt;span class='go'&gt;22 Jul 2012 22:36:09 : DEBUG    : Object uploaded: db/version&lt;/span&gt;
&lt;span class='go'&gt;22 Jul 2012 22:36:09 : DEBUG    : Object uploaded: pool/main/a/acpi/acpi_0.09-3ubuntu1_amd64.deb&lt;/span&gt;
&lt;span class='go'&gt;22 Jul 2012 22:36:10 : DEBUG    : Object uploaded: dists/precise/main/binary-amd64/Packages.gz&lt;/span&gt;
&lt;span class='go'&gt;22 Jul 2012 22:36:10 : DEBUG    : Object uploaded: dists/precise/main/binary-i386/Packages.gz&lt;/span&gt;
&lt;span class='go'&gt;22 Jul 2012 22:36:10 : DEBUG    : Object uploaded: db/checksums.db&lt;/span&gt;
&lt;span class='go'&gt;22 Jul 2012 22:36:10 : DEBUG    : Object uploaded: dists/precise/Release&lt;/span&gt;
&lt;span class='go'&gt;22 Jul 2012 22:36:10 : DEBUG    : Object uploaded: dists/precise/main/binary-amd64/Release&lt;/span&gt;
&lt;span class='go'&gt;22 Jul 2012 22:36:11 : INFO     : Synchronization complete, took: 4.62 seconds&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;After the upload has finished, you can test the repository by adding it to your APT sources list:&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='console'&gt;&lt;span class='go'&gt;  echo &amp;quot;deb http://c15173579.r79.cf2.rackcdn.com precise main&amp;quot; | sudo tee -a /etc/apt/sources.list.d/test-api-repo.list&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We are also going to disable APT HTTP request pipeling. This step is required, because a nginx proxy running in front of the CDN doesn&amp;#8217;t seem to support HTTP/1.1 pipelining. If you skip this test apt-get update will still work, but it will get stuck on &lt;code&gt;[Waiting for headers]&lt;/code&gt; for a longer period of time.&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='console'&gt;&lt;span class='go'&gt;  echo &amp;quot;Acquire::http::Pipeline-Depth &amp;quot;0&amp;quot;;&amp;quot; | sudo tee -a /etc/apt/apt.conf.d/pipeline-workaround.conf&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can test that everything is working by issuing the following command:&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='console'&gt;&lt;span class='go'&gt;  sudo apt-get update ; sudo apt-cache policy acpi&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You should get an output similar to this one:&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='console'&gt;&lt;span class='go'&gt;acpi:&lt;/span&gt;
&lt;span class='go'&gt;  Installed: (none)&lt;/span&gt;
&lt;span class='go'&gt;  Candidate: 1.6-1&lt;/span&gt;
&lt;span class='go'&gt;  Version table:&lt;/span&gt;
&lt;span class='go'&gt;     1.6-1 0&lt;/span&gt;
&lt;span class='go'&gt;        500 http://us.archive.ubuntu.com/ubuntu/ precise/universe amd64 Packages&lt;/span&gt;
&lt;span class='go'&gt;     0.09-3ubuntu1 0&lt;/span&gt;
&lt;span class='go'&gt;        500 http://c15173579.r79.cf2.rackcdn.com/ precise/main amd64 Packages&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;That is it. To make sure your container is always up to date, you need synchronize it every time you add a new packages. This can be achieved in multiple ways:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;adding a script which runs synchronize command after adding a package&lt;/li&gt;

&lt;li&gt;adding a cron job which periodically runs the sync command&lt;/li&gt;
&lt;/ul&gt;</content>
	</entry>
    
	<entry>
		<title>Libcloud Update (April 2012) - 0.8.0, 0.9.1, GSoC</title>
        <link href="http://www.tomaz.me/2012/04/28/libcloud-monthly-update-april-2012-0-8-0-0-9-1-gsoc.html" />
        <id>http://www.tomaz.me/2012/04/28/libcloud-monthly-update-april-2012-0-8-0-0-9-1-gsoc.html</id>
		<updated>2012-04-28T00:00:00-07:00</updated>
		<content type="html">&lt;h2 id='libcloud_update_april_2012__080_091_gsoc'&gt;&lt;a href='/2012/04/28/libcloud-monthly-update-april-2012-0-8-0-0-9-1-gsoc.html'&gt;Libcloud Update (April 2012) - 0.8.0, 0.9.1, GSoC&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Welcome to Libcloud April 2012 update post. Sorry for skipping a couple of months, but I have been pretty busy again. In any case, here is a short but sweet April update.&lt;/p&gt;

&lt;h3 id='what_has_been_accomplished_in_the_past_few_months'&gt;What has been accomplished in the past few months&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href='http://mail-archives.apache.org/mod_mbox/libcloud-dev/201202.mbox/%3CCAJMHEmJJcigBO%2BZoSyxFGvc5Z37t-t3KKHBHyyMi7L-J4-Y03A%40mail.gmail.com%3E'&gt;Libcloud 0.8.1&lt;/a&gt; with support for compressed responses (gzip, deflate) has been released.&lt;/li&gt;

&lt;li&gt;&lt;a href='http://mail-archives.apache.org/mod_mbox/libcloud-dev/201204.mbox/%3CCAJMHEmJzeGL%2BU1PNeX0T-1dcxUC1um88jQTAmskZ-mXTQ3QLGw%40mail.gmail.com%3E'&gt;Libcloud 0.9.1&lt;/a&gt; with improvements in deploy functionality and OpenStack driver has been released.&lt;/li&gt;

&lt;li&gt;I have attended &lt;a href='https://us.pycon.org/2012/'&gt;PyCon US 2012&lt;/a&gt; in Santa Clara in March. As always, it was a lot of fun talking with old and meeting new friends. This year we didn&amp;#8217;t hold a Libcloud development sprint, but I still managed to talk with some Libcloud users and prompted Libcloud at the AWS open space session.&lt;/li&gt;

&lt;li&gt;Libcloud has applied to &lt;a href='http://www.google-melange.com/gsoc/homepage/google/gsoc2012'&gt;Google Summer of Code 2012&lt;/a&gt; under Apache organization. We have received 1 slot. Student Ilgiz Islamgulov will be working on the &lt;a href='https://issues.apache.org/jira/browse/LIBCLOUD-159'&gt;Libcloud REST interface&lt;/a&gt; this summer.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class='imginline'&gt;&lt;img class='inline' src='/images/dancing_robots.jpg' /&gt;&lt;br /&gt;Dancing robots at PyCon&lt;br /&gt;&lt;/div&gt;
&lt;h3 id='what_is_currently_going_on'&gt;What is currently going on&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;We are currently moving towards 1.0 release which means mostly polishing the code, fixing bugs and avoiding big and API breaking changes. A lot of code, especially compute API has already been battle tested, but there are still some parts which I want to see improved (deployment functionality for example) before releasing 1.0.&lt;/li&gt;
&lt;/ul&gt;</content>
	</entry>
    
	<entry>
		<title>Libcloud Monthly Update (December 2011) - 0.6.1, 0.6.2, 0.7.1, Python 3</title>
        <link href="http://www.tomaz.me/2011/12/07/libcloud-montly-update-december-2011.html" />
        <id>http://www.tomaz.me/2011/12/07/libcloud-montly-update-december-2011.html</id>
		<updated>2011-12-07T00:00:00-08:00</updated>
		<content type="html">&lt;h2 id='libcloud_monthly_update_december_2011__061_062_071_python_3'&gt;&lt;a href='/2011/12/07/libcloud-montly-update-december-2011.html'&gt;Libcloud Monthly Update (December 2011) - 0.6.1, 0.6.2, 0.7.1, Python 3&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Past few months have been pretty busy here and you may have noticed that I didn&amp;#8217;t post a monthly update post in the last two months. This doesn&amp;#8217;t mean nothing has been going on though! In fact, quite the contrary. Last few months have been very busy and we have shipped two new releases and a voting thread for a new 0.7.1 release was just started a few days ago. More about that bellow.&lt;/p&gt;

&lt;h3 id='what_has_been_accomplished_in_the_past_two_months'&gt;What has been accomplished in the past two months&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href='http://mail-archives.apache.org/mod_mbox/www-announce/201111.mbox/%3CCAJMHEm+8XX704mSY4qw4P0YSBjGK=0SWCKjzSHBe8sLD__2UnA@mail.gmail.com%3E'&gt;Libcloud 0.6.1&lt;/a&gt; with a brand new DNS API (among many other improvements and additions) has been released.&lt;/li&gt;

&lt;li&gt;A few days after releasing 0.6.1 we have also released &lt;a href='http://mail-archives.apache.org/mod_mbox/libcloud-users/201111.mbox/%3CCAJMHEmJTN407_JJRfnwDuJxNsWCupEGc0cXWxs=M-n8HoHoQKQ@mail.gmail.com%3E'&gt;0.6.2&lt;/a&gt; which was primary a bug-fix release, but it also includes some new features and improvements such as support for OpenStack Auth 2.0 API, support for new Amazon location (Oregon) and a CloudStack driver.&lt;/li&gt;

&lt;li&gt;A few weeks ago a new committer, Hutson Betts (hbetts) has &lt;a href='http://mail-archives.apache.org/mod_mbox/libcloud-dev/201111.mbox/%3CCAJMHEm+08-1MMCgHDZgULc+StDiwgR+_krVZvHOJF0odcU_OWg@mail.gmail.com%3E'&gt;joined our team&lt;/a&gt;. He has previously mostly contributed to the OpenNebula driver and we believe giving him commit access will allow him to contribute more directly and easily and is a good thing for the whole project.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id='what_is_currently_going_on'&gt;What is currently going on&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;A lot of things!&lt;/li&gt;

&lt;li&gt;This weekend I have just finished adding support for Python 3 to Libcloud. Now we have a single code base which supports both, Python 2 and 3 and as far as I know we are the first Python cloud library which does that. I hope other projects will follow. If you are interested in more details you can read my post titled &lt;a href='/2011/12/03/lessons-learned-while-porting-libcloud-to-python-3.html'&gt;Lessons learned while porting Libcloud to Python 3&lt;/a&gt; where I have described some of the issues which I have encountered while porting the library. Armin has recently also wrote a good blog post about Python 3 which you should read - &lt;a href='http://lucumr.pocoo.org/2011/12/7/thoughts-on-python3/'&gt;Thoughts on Python 3&lt;/a&gt;.&lt;/li&gt;

&lt;li&gt;I am moving to San Francisco where I will work full time for Rackspace. I will try to organize a Bay Area Libcloud meet-up in the upcoming weeks (hey, free pizza and beer!). I will post more info on the website and mailing list when all the details are fleshed out.&lt;/li&gt;
&lt;/ul&gt;</content>
	</entry>
    
	<entry>
		<title>Lessons learned while porting Libcloud to Python 3</title>
        <link href="http://www.tomaz.me/2011/12/03/lessons-learned-while-porting-libcloud-to-python-3.html" />
        <id>http://www.tomaz.me/2011/12/03/lessons-learned-while-porting-libcloud-to-python-3.html</id>
		<updated>2011-12-03T00:00:00-08:00</updated>
		<content type="html">&lt;h2 id='lessons_learned_while_porting_libcloud_to_python_3'&gt;&lt;a href='/2011/12/03/lessons-learned-while-porting-libcloud-to-python-3.html'&gt;Lessons learned while porting Libcloud to Python 3&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Yesterday after seeing and being inspired by the &lt;a href='http://news.ycombinator.com/item?id=3305021'&gt;Django Python 3 port&lt;/a&gt; news, I have decided it&amp;#8217;s finally time to port &lt;a href='http://libcloud.apache.org/'&gt;Libcloud&lt;/a&gt; to Python 3. There have already been some talks about doing that in the past, but nobody actually managed to make a lot of progress.&lt;/p&gt;

&lt;p&gt;In general, our goal is pretty similar to the Django one - have a single code base which works with Python 2.5, 2.6, 2.7 / PyPy and Python 3.&lt;/p&gt;

&lt;p&gt;Alternative approach to having a single code base is using a tool like &lt;a href='http://docs.python.org/library/2to3.html'&gt;2to3&lt;/a&gt; to automatically convert 2.x version to the 3.x one or having multiple code bases / branches - one for 2.x and one for 3.x.&lt;/p&gt;

&lt;p&gt;Early on when we talked about porting to Python 3, we have decided that we will go with a &amp;#8220;single code base&amp;#8221; approach. This approach allows us to keep a fast development pace and it&amp;#8217;s also more friendlier for our users.&lt;/p&gt;

&lt;p&gt;In this post I will describe some of the issues which I have encountered while porting the library and how I have solved them.&lt;/p&gt;

&lt;h2 id='1_handling_renamed_libraries_and_moved_functionality'&gt;1. Handling renamed libraries and moved functionality&lt;/h2&gt;

&lt;h3 id='httplib'&gt;httplib&lt;/h3&gt;

&lt;p&gt;In Python 3 &lt;code&gt;httplib&lt;/code&gt; has been renamed to &lt;code&gt;http.client&lt;/code&gt;. To solve this problem, I have used an aliased import - &lt;code&gt;import http.client as httplib&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id='urllib__urllib2'&gt;urllib &amp;amp; urllib2&lt;/h3&gt;

&lt;p&gt;All of the functionality from &lt;code&gt;urllib2&lt;/code&gt; has been merged to &lt;code&gt;urllib&lt;/code&gt;. This problem can also be easily solved using an aliased import - &lt;code&gt;import urllib as urllib2&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id='urlparse'&gt;urlparse&lt;/h3&gt;

&lt;p&gt;Functionality from &lt;code&gt;urlparse&lt;/code&gt; has been moved to &lt;code&gt;urllib.parse&lt;/code&gt;. We only use two functions from this module (quote and urlencode) so simple aliased import did the trick:&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='python'&gt;&lt;span class='kn'&gt;from&lt;/span&gt; &lt;span class='nn'&gt;urllib.parse&lt;/span&gt; &lt;span class='kn'&gt;import&lt;/span&gt; &lt;span class='n'&gt;quote&lt;/span&gt; &lt;span class='k'&gt;as&lt;/span&gt; &lt;span class='n'&gt;urlquote&lt;/span&gt;
&lt;span class='kn'&gt;from&lt;/span&gt; &lt;span class='nn'&gt;urllib.parse&lt;/span&gt; &lt;span class='kn'&gt;import&lt;/span&gt; &lt;span class='n'&gt;urlencode&lt;/span&gt; &lt;span class='k'&gt;as&lt;/span&gt; &lt;span class='n'&gt;urlencode&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id='xmlrpclib'&gt;xmlrpclib&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;xmlrpclib&lt;/code&gt; has been moved to &lt;code&gt;xmlrpc.client&lt;/code&gt;. Simple aliased import also solved this problem - &lt;code&gt;import xmlrpc.client as xmlrpclib&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id='stringio'&gt;StringIO&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;StringIO&lt;/code&gt; has also been moved. &lt;code&gt;from io import StringIO&lt;/code&gt; did the trick.&lt;/p&gt;

&lt;h2 id='2__type_and_filelike_objects'&gt;2. &lt;code&gt;file&lt;/code&gt; type and file-like objects&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;file&lt;/code&gt; type has been removed in Python 3. To resolve this problem, I have used code similar to the one bellow in the places where we use &lt;code&gt;file&lt;/code&gt; type.&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='python'&gt;&lt;span class='k'&gt;if&lt;/span&gt; &lt;span class='n'&gt;PY3&lt;/span&gt;&lt;span class='p'&gt;:&lt;/span&gt;
    &lt;span class='kn'&gt;from&lt;/span&gt; &lt;span class='nn'&gt;io&lt;/span&gt; &lt;span class='kn'&gt;import&lt;/span&gt; &lt;span class='n'&gt;FileIO&lt;/span&gt; &lt;span class='k'&gt;as&lt;/span&gt; &lt;span class='nb'&gt;file&lt;/span&gt;

&lt;span class='k'&gt;class&lt;/span&gt; &lt;span class='nc'&gt;MyFileLikeObject&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='nb'&gt;file&lt;/span&gt;&lt;span class='p'&gt;):&lt;/span&gt;
    &lt;span class='o'&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id='3_generators_and__method'&gt;3. Generators and &lt;code&gt;.next()&lt;/code&gt; method.&lt;/h2&gt;

&lt;p&gt;For consistency with other magic methods, &lt;code&gt;next&lt;/code&gt; method in Python 3 has been renamed to &lt;code&gt;__next__&lt;/code&gt;. To make it work with all the versions, I have used built-in &lt;code&gt;next&lt;/code&gt; function in Python &amp;gt;= 3 and object &lt;code&gt;.next()&lt;/code&gt; method in older versions.&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='python'&gt;&lt;span class='k'&gt;if&lt;/span&gt; &lt;span class='n'&gt;sys&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;version_info&lt;/span&gt; &lt;span class='o'&gt;&amp;gt;=&lt;/span&gt; &lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='mi'&gt;3&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='mi'&gt;0&lt;/span&gt;&lt;span class='p'&gt;):&lt;/span&gt;
    &lt;span class='nb'&gt;next&lt;/span&gt; &lt;span class='o'&gt;=&lt;/span&gt; &lt;span class='n'&gt;__builtins__&lt;/span&gt;&lt;span class='p'&gt;[&lt;/span&gt;&lt;span class='s'&gt;&amp;#39;next&amp;#39;&lt;/span&gt;&lt;span class='p'&gt;]&lt;/span&gt;
&lt;span class='k'&gt;else&lt;/span&gt;&lt;span class='p'&gt;:&lt;/span&gt;
    &lt;span class='k'&gt;def&lt;/span&gt; &lt;span class='nf'&gt;next&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='n'&gt;i&lt;/span&gt;&lt;span class='p'&gt;):&lt;/span&gt;
        &lt;span class='k'&gt;return&lt;/span&gt; &lt;span class='n'&gt;i&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;next&lt;/span&gt;&lt;span class='p'&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id='4_exception_handling'&gt;4. Exception handling&lt;/h2&gt;

&lt;p&gt;Sadly, there is no unified way to handle exceptions and extract the exception object in Python 2.5 and Python 3.x. This means I needed to use a hacky &lt;code&gt;sys.exc_info()[1]&lt;/code&gt; approach to extract the raised exception&lt;/p&gt;

&lt;p&gt;Old code:&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='python'&gt;&lt;span class='k'&gt;try&lt;/span&gt;&lt;span class='p'&gt;:&lt;/span&gt;
    &lt;span class='n'&gt;foo&lt;/span&gt;
&lt;span class='k'&gt;except&lt;/span&gt; &lt;span class='ne'&gt;Exception&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='n'&gt;e&lt;/span&gt;&lt;span class='p'&gt;:&lt;/span&gt;
    &lt;span class='k'&gt;print&lt;/span&gt; &lt;span class='n'&gt;e&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;New code:&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='python'&gt;&lt;span class='k'&gt;try&lt;/span&gt;&lt;span class='p'&gt;:&lt;/span&gt;
    &lt;span class='n'&gt;foo&lt;/span&gt;
&lt;span class='k'&gt;except&lt;/span&gt; &lt;span class='ne'&gt;Exception&lt;/span&gt;&lt;span class='p'&gt;:&lt;/span&gt;
    &lt;span class='n'&gt;e&lt;/span&gt; &lt;span class='o'&gt;=&lt;/span&gt; &lt;span class='n'&gt;sys&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;exc_info&lt;/span&gt;&lt;span class='p'&gt;()[&lt;/span&gt;&lt;span class='mi'&gt;1&lt;/span&gt;&lt;span class='p'&gt;]&lt;/span&gt;
    &lt;span class='k'&gt;print&lt;/span&gt; &lt;span class='n'&gt;e&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;One of the PyPy developers has &lt;a href='http://www.reddit.com/r/Python/comments/mxufx/django_python_3_port_all_tests_now_pass_on_272/'&gt;posted on reddit&lt;/a&gt; that this approach is very slow in PyPy. Luckily, besides the tests, there aren&amp;#8217;t many places in our code where we need access to the exception object so this should be a good compromise for now.&lt;/p&gt;

&lt;h2 id='5_filter_map_dictkeys'&gt;5. filter, map, dict.keys()&lt;/h2&gt;

&lt;p&gt;In Python 2 those functions return a &lt;code&gt;list&lt;/code&gt;, but in Python 3 they return a special object. Compatibility can be preserved by casting a result from this function to a list - e.g. &lt;code&gt;list(filter(lamba x: x.name == &amp;#39;test&amp;#39;, nodes))&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id='6_iteritems_xrange'&gt;6. iteritems, xrange&lt;/h2&gt;

&lt;p&gt;In Python 3, &lt;code&gt;iteritems&lt;/code&gt; method has been removed and functionality from &lt;code&gt;xrange&lt;/code&gt; has been merged into &lt;code&gt;range&lt;/code&gt;. I have simplify replaced &lt;code&gt;iteritems&lt;/code&gt; with &lt;code&gt;items&lt;/code&gt; and &lt;code&gt;xrange&lt;/code&gt; with &lt;code&gt;range&lt;/code&gt;. We never used &lt;code&gt;xrange&lt;/code&gt; with a lot of values so storing a whole list in memory in Python 2.x shouldn&amp;#8217;t be a huge deal.&lt;/p&gt;

&lt;h2 id='7__and_encoding'&gt;7. &lt;code&gt;xml.etree.ElementTree.tostring&lt;/code&gt; and encoding&lt;/h2&gt;

&lt;p&gt;In Python 3 this method returns &lt;a href='http://hg.python.org/cpython/rev/57e631f088d7/'&gt;bytes by default&lt;/a&gt;. To preserve the old behavior and get a string back, I have used a code similar to one bellow:&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='python'&gt;&lt;span class='k'&gt;if&lt;/span&gt; &lt;span class='n'&gt;PY3&lt;/span&gt;&lt;span class='p'&gt;:&lt;/span&gt;
    &lt;span class='n'&gt;encoding&lt;/span&gt; &lt;span class='o'&gt;=&lt;/span&gt; &lt;span class='s'&gt;&amp;#39;unicode&amp;#39;&lt;/span&gt;
&lt;span class='k'&gt;else&lt;/span&gt;&lt;span class='p'&gt;:&lt;/span&gt;
    &lt;span class='n'&gt;encoding&lt;/span&gt; &lt;span class='o'&gt;=&lt;/span&gt; &lt;span class='bp'&gt;None&lt;/span&gt;

&lt;span class='n'&gt;data&lt;/span&gt; &lt;span class='o'&gt;=&lt;/span&gt; &lt;span class='n'&gt;tostring&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='n'&gt;root&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='n'&gt;encoding&lt;/span&gt;&lt;span class='o'&gt;=&lt;/span&gt;&lt;span class='n'&gt;encoding&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id='8_encodehex'&gt;8. encode(&amp;#8216;hex&amp;#8217;)&lt;/h2&gt;

&lt;p&gt;We had multiple places in the code where we did something like this:&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='python'&gt;&lt;span class='n'&gt;value&lt;/span&gt; &lt;span class='o'&gt;=&lt;/span&gt; &lt;span class='n'&gt;os&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;urandom&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='mi'&gt;8&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;encode&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='s'&gt;&amp;#39;hex&amp;#39;&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Hex encoding has been removed from Python 3. I have preserved backward compatibility by using &lt;code&gt;binascii&lt;/code&gt; module:&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='python'&gt;&lt;span class='n'&gt;value&lt;/span&gt; &lt;span class='o'&gt;=&lt;/span&gt; &lt;span class='n'&gt;binascii&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;hexlify&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='n'&gt;os&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;urandom&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='mi'&gt;8&lt;/span&gt;&lt;span class='p'&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id='9_octal_numbers'&gt;9. Octal numbers&lt;/h2&gt;

&lt;p&gt;In Python 3 there is a special backward-incompatible (and strange) syntax for octal numbers - e.g. &lt;code&gt;0o755&lt;/code&gt;. We only use octal number in one place and this has been easily resolved by using &lt;code&gt;int&lt;/code&gt; to convert a string to a number with base 8 - &lt;code&gt;int(&amp;#39;755&amp;#39;, 8)&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Those are just some of the issues I have encountered during porting. If you want to view all of the issues and how I have resolved them, you can see a full diff &lt;a href='https://github.com/apache/libcloud/compare/c995ea6b8b37d4bbec741a7d2d70b08da1c62f55...py3k'&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Overall, I&amp;#8217;m pretty satisfied with the outcome. I have managed to keep most of the Python 2 and Python 3 compatibility code in a single module (&lt;code&gt;libcloud.py3&lt;/code&gt;) and it probably took me less then 5 hours to do the whole port including the research.&lt;/p&gt;

&lt;p&gt;Bellow you can also find some links which I have found helpful while porting the code:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href='http://docs.python.org/library/2to3.html'&gt;http://docs.python.org/library/2to3.html&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;a href='http://docs.python.org/release/3.0.1/whatsnew/3.0.html'&gt;http://docs.python.org/release/3.0.1/whatsnew/3.0.html&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;a href='http://python3porting.com/differences.html'&gt;http://python3porting.com/differences.html&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;a href='http://www.voidspace.org.uk/python/articles/porting-mock-to-python-3.shtml'&gt;http://www.voidspace.org.uk/python/articles/porting-mock-to-python-3.shtml&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content>
	</entry>
    
	<entry>
		<title>Whiskey Node.js test runner now with more goodness - introducing process runner</title>
        <link href="http://www.tomaz.me/2011/11/27/whiskey-now-with-more-goodness-introducing-process-runner.html" />
        <id>http://www.tomaz.me/2011/11/27/whiskey-now-with-more-goodness-introducing-process-runner.html</id>
		<updated>2011-11-27T00:00:00-08:00</updated>
		<content type="html">&lt;h2 id='whiskey_nodejs_test_runner_now_with_more_goodness__introducing_process_runner'&gt;&lt;a href='/2011/11/27/whiskey-now-with-more-goodness-introducing-process-runner.html'&gt;Whiskey Node.js test runner now with more goodness - introducing process runner&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;First a short-introduction for people who aren&amp;#8217;t familiar with Whiskey.&lt;/p&gt;

&lt;p&gt;&lt;a href='https://github.com/cloudkick/whiskey'&gt;Whiskey&lt;/a&gt; is a powerful test runner for Node.js applications. It supports async testing, code coverage, scope leaks reporting, Makefile generation, test timing and lot more. Be sure to check out the &lt;a href='https://github.com/cloudkick/whiskey'&gt;github page&lt;/a&gt; which lists all the features.&lt;/p&gt;

&lt;p&gt;New version (0.6.0) which has been released today includes a process runner and a support for managing external test dependencies. Test dependency is any kind of process on which the (integration) tests depend on.&lt;/p&gt;

&lt;p&gt;Examples include, but are not limited to:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;database,&lt;/li&gt;

&lt;li&gt;some kind of api server,&lt;/li&gt;

&lt;li&gt;web server,&lt;/li&gt;

&lt;li&gt;other external services&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Process runner is configured using a simple JSON configuration file. Most of the options have sane default values, which means if you don&amp;#8217;t have any special requirements you can configure it very quickly.&lt;/p&gt;

&lt;p&gt;Example configuration file which we use for our monitoring system integration test suite at Rackspace can be found &lt;a href='https://gist.github.com/5953e55ced30ef8a9581'&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Each process can also specify its dependencies in the &lt;code&gt;depends&lt;/code&gt; option which allows Whiskey to start unrelated processes concurrently.&lt;/p&gt;

&lt;p&gt;Before Whiskey process runner was available we have been using &lt;a href='http://www.scons.org/'&gt;scons&lt;/a&gt; for managing and running all the test dependencies. Test dependencies related section in our &lt;code&gt;SConstruct&lt;/code&gt; file was long and hard to maintain which means switching to Whiskey process runner was a nice improvement.&lt;/p&gt;

&lt;p&gt;Process runner can be used by passing &lt;code&gt;--dependencies &amp;lt;configuration_file_path.json&amp;gt;&lt;/code&gt; option to &lt;code&gt;whiskey&lt;/code&gt; binary. By default all the dependencies specified in the configuration file are started, but there is also &lt;code&gt;--only-esential-dependencies&lt;/code&gt; option available which will make Whiskey first inspect the test files and only start the processes which are required by the tests which will be ran.&lt;/p&gt;

&lt;p&gt;Each test file can specify on which processes it depends by exporting &lt;code&gt;dependencies&lt;/code&gt; attribute. This attribute must be an array and contain the names of the processes as defined in the configuration file.&lt;/p&gt;

&lt;p&gt;If you have any questions or suggestions you can find me on #Node.js IRC channel on freenode (nick &lt;code&gt;Kami_&lt;/code&gt;). If you find a bug or a problem you can also open an ticket on the project &lt;a href='https://github.com/cloudkick/whiskey/issues'&gt;issue tracker&lt;/a&gt;.&lt;/p&gt;</content>
	</entry>
    
	<entry>
		<title>libcloud Monthly Update (September 2011) - FLOSS weekly, OpenStack driver improvements, DNS API</title>
        <link href="http://www.tomaz.me/2011/09/24/libcloud-monthly-update-september-floss-weekly-openstack-improvements-dns-api.html" />
        <id>http://www.tomaz.me/2011/09/24/libcloud-monthly-update-september-floss-weekly-openstack-improvements-dns-api.html</id>
		<updated>2011-09-24T00:00:00-07:00</updated>
		<content type="html">&lt;h2 id='libcloud_monthly_update_september_2011__floss_weekly_openstack_driver_improvements_dns_api'&gt;&lt;a href='/2011/09/24/libcloud-monthly-update-september-floss-weekly-openstack-improvements-dns-api.html'&gt;libcloud Monthly Update (September 2011) - FLOSS weekly, OpenStack driver improvements, DNS API&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Without further ado here is a Libcloud monthly update for September 2011.&lt;/p&gt;

&lt;h3 id='what_has_been_accomplished_in_the_past_month'&gt;What has been accomplished in the past month&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;I was a guest on FLOSS weekly (podcast about FOSS software) where I talked about Libcloud. You can find video and audio recording of the show on &lt;a href='http://twit.tv/show/floss-weekly/181'&gt;twit.tv&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;OpenStack and Rackspace drivers have received a lot of needed attention and refactoring. Rackspace driver now properly inherits from the OpenStack one instead of vice versa (thanks &lt;a href='https://issues.apache.org/jira/secure/ViewProfile.jspa?name=manganeez'&gt;Mike&lt;/a&gt;). This will make extending the Rackspace driver and developing other provider drivers which are based on OpenStack a lot easier. Rackspace drivers now also support authentication with Rackspace Auth 1.1.&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;Linode compute driver now supports new location in Japan.&lt;/p&gt;

&lt;p&gt;Linode has recently &lt;a href='http://blog.linode.com/2011/09/19/linode-cloud-asia-pacific/'&gt;added a new location (Tokyo, Japan)&lt;/a&gt; and this location is now also &lt;a href='http://blog.linode.com/2011/09/19/linode-cloud-asia-pacific/'&gt;supported in Libcloud&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;DNS API development has finally started.&lt;/p&gt;

&lt;p&gt;Base API proposal can be found &lt;a href='http://mail-archives.apache.org/mod_mbox/libcloud-dev/201109.mbox/%3CCAJMHEmLfWki5awUqZL9ZNsrpJFkHNHAe00Vs5SeaJXkmWSxJ7g@mail.gmail.com%3E'&gt;here&lt;/a&gt;. I have also just finished a reference implementation and a first driver for the Linode DNS as a service. The driver can be found in &lt;a href='https://svn.apache.org/viewvc/libcloud/trunk/libcloud/dns/drivers/linode.py?view=markup'&gt;trunk&lt;/a&gt;. Feedback is &lt;a href='http://mail-archives.apache.org/mod_mbox/libcloud-dev/201109.mbox/%3CCAJMHEmL7M12TG5eFz0HQ-kCuA3=ZnNkTt8_veoOFNfueaG9q2w@mail.gmail.com%3E'&gt;welcome (and encouraged)&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id='what_is_currently_going_on'&gt;What is currently going on&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Hacking on the DNS API continues. DNS API with at least two drivers is planned to be included in the next release (0.6.0) which should be out around November.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;See you next month!&lt;/p&gt;</content>
	</entry>
    
	<entry>
		<title>libcloud Monthly Update (August 2011) - 0.5.2 release, EuroPython 2011 recap, FLOSS weekly</title>
        <link href="http://www.tomaz.me/2011/08/24/libcloud-monthly-update-august.html" />
        <id>http://www.tomaz.me/2011/08/24/libcloud-monthly-update-august.html</id>
		<updated>2011-08-24T00:00:00-07:00</updated>
		<content type="html">&lt;h2 id='libcloud_monthly_update_august_2011__052_release_europython_2011_recap_floss_weekly'&gt;&lt;a href='/2011/08/24/libcloud-monthly-update-august.html'&gt;libcloud Monthly Update (August 2011) - 0.5.2 release, EuroPython 2011 recap, FLOSS weekly&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;As you might have noticed, I didn&amp;#8217;t write a monthly update post in the last two months. The reason for that is that I have been busy with work and finishing my thesis for a bachelor degree.&lt;/p&gt;

&lt;p&gt;In this post I will try to sum up what has happened during this time and what is currently going on.&lt;/p&gt;

&lt;h3 id='what_has_happened_in_the_past_two_months'&gt;What has happened in the past two months&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Libcloud 0.5.2 has been released.&lt;/p&gt;

&lt;p&gt;This is a primary a bug-fix release, but it also includes two new compute drivers for &lt;em&gt;serverlove.com&lt;/em&gt; and &lt;em&gt;skalicloud.com&lt;/em&gt;. Full changelog and release announcement can be found &lt;a href='http://mail-archives.apache.org/mod_mbox/www-announce/201107.mbox/%3CCAJMHEmK_y8kkyBLJojfuCvx1CPxrTcy95xA3Wp-vZ4U9BhTXDw@mail.gmail.com%3E'&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;EuroPython 2011 sprint was a success.&lt;/p&gt;

&lt;p&gt;At a peek time we had a total of 6 sprinters :) A lot of stuff which has been accomplished at the sprint has been integrated into 0.5.2 release. You can also find slides and recording of my Libcloud talk on &lt;a href='http://ep2011.europython.eu/conference/talks/managing-the-cloud-with-libcloud'&gt;EuroPython 2011 website&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;I have finally met another Libcloud developer in real-life.&lt;/p&gt;

&lt;p&gt;This time I have met &lt;a href='http://empt1e.blogspot.com/'&gt;Roman a.k.a. mirrorbox&lt;/a&gt; in San Francisco. Most of our conversation was not Libcloud related, but we managed to talk a bit about the Libcloud future and topics such as DNS support, problems with our current blocking-model and asynchronous API&amp;#8217;s and possible support for event-based libraries such as Twisted and gevent.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id='what_is_currently_going_on'&gt;What is currently going on&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Me and &lt;strike&gt;Paul Querna&lt;/strike&gt; (Paul Querna can&amp;#8217;t make it since he is away on 7th) will be guests on the &lt;a href='http://twit.tv/FLOSS'&gt;FLOSS weekly&lt;/a&gt; podcast so don&amp;#8217;t forget to tune-in on &lt;strong&gt;September 7, 2011 at 09:30 AM US Pacific Time&lt;/strong&gt;. Show is streamed live, but as always recording will also be available a day or two later.&lt;/li&gt;
&lt;/ul&gt;</content>
	</entry>
    
</feed>
